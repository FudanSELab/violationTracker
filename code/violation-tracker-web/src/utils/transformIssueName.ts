import intl from 'react-intl-universal';

const transform = new Map([
  // 下面是Java规则中英文翻译
  [
    '".equals()" should not be used to test the values of "Atomic" classes',
    '不要使用equals方法对Atomic类进行是否相等的判断',
  ],
  [
    '"@Deprecated" code should not be used',
    '不应该在程序中使用 @Deprecated 标注的接口、类和方法',
  ],
  [
    '"BigDecimal(double)" should not be used',
    '不要使用BigDecimal(double)去构造一个BigDecimal对象',
  ],
  ['"clone" should not be overridden', '不应重写clone方法'],
  [
    '"equals(Object obj)" and "hashCode()" should be overridden in pairs',
    'equals(Object obj)和hashCode()应该同时重写',
  ],
  [
    '"Iterator.next()" methods should throw "NoSuchElementException"',
    'Iterator.next()应该抛出NoSuchElementException异常',
  ],
  ['"notifyAll" should be used', '此处应该使用notifyAll而不是notify'],
  ['"null" should not be used with "Optional"', 'null不应与Optional一起使用'],
  ['"NullPointerException" should not be caught', '空指针不应捕获处理'],
  [
    '"NullPointerException" should not be explicitly thrown',
    'NullPointerException不应该被显式抛出',
  ],
  [
    '"Thread.run()" should not be called directly',
    '不应该直接调用Thread对象的run方法',
  ],
  [
    '"wait" should not be called when multiple locks are held',
    '当有多个锁时，不应调用“wait”',
  ],
  [
    "[p3c]Do not add 'is' as prefix while defining Boolean variable.",
    '[p3c]定义布尔变量时不要添加“is”作为前缀',
  ],
  [
    '[p3c]Do not remove or add elements to a collection in a foreach loop.',
    '[p3c]不要在foreach循环中删除或向集合添加元素',
  ],
  [
    '[p3c]Do not use methods which will modify the list after using Arrays.asList to convert array to list.',
    '[p3c]不要使用在使用后会修改列表的方法数组Arrays.asList',
  ],
  ['[p3c]Manually create thread pool is better.', '[p3c]最好手动创建线程池'],
  [
    '[p3c]SimpleDataFormat is unsafe, do not define it as a static variable. If have to, lock or DateUtils class must be used.',
    '[p3c]SimpleDataFormat不安全，不要将其定义为静态变量。如果必须定义，则必须使用lock或DateUtils类。',
  ],
  [
    'Boxing and unboxing should not be immediately reversed',
    '装箱（创建int/Integer类型值的对象）和拆箱（将对象中原始值解出来）不应连续操作。',
  ],
  [
    'Collection sizes and array length comparisons should make sense',
    '集合大小和数组长度比较应该是有意义的',
  ],
  [
    'Conditionally executed code should be reachable',
    '条件执行块应该是可访问的',
  ],
  [
    'Conditionally executed blocks should be reachable',
    '条件执行块应该是可访问的',
  ],
  [
    'Empty arrays and collections should be returned instead of null',
    '应该返回空数组和集合，而不是null',
  ],
  [
    'Instance methods should not write to "static" fields',
    '实例方法不应写入静态字段',
  ],
  ['Locks should be released', '保证锁能够释放'],
  ['Loops should not be infinite', '循环不应该是无限的'],
  ['Math operands should be cast before assignment', '赋值前应转换数学操作数'],
  [
    'Related "if/else if" statements should not have the same condition',
    'if语句不应该有相同的条件',
  ],
  ['Resources should be closed', '资源应该关闭'],
  ['String literals should not be duplicated', '字符串文字不应重复'],
  [
    'Strings and Boxed types should be compared using "equals()"',
    '字符串和包装类型对比时应该使用equals方法',
  ],
  ['Try-with-resources should be used', '应该使用Try-with-resources'],
  [
    'Week Year ("YYYY") should not be used for date formatting',
    '星期 年（“YYYY”）不应用于日期格式',
  ],
  ['Zero should not be a possible denominator', '零不应该是一个分母'],
  ['arrow-spacing', '强制箭头函数的箭头前后使用一致的空格'],
  ['block-spacing', '禁止或强制在代码块中开括号前和闭括号后有空格'],
  ['brace-style', '强制在代码块中使用一致的大括号风格'],
  ['camelcase', '强制使用骆驼拼写法命名约定'],
  ['comma-dangle', '要求或禁止末尾逗号'],
  ['comma-spacing', '强制在逗号前后使用一致的空格'],
  ['comma-style', '强制使用一致的逗号风格'],
  ['curly', '强制所有控制语句使用一致的括号风格'],
  ['dot-location', '强制在点号之前和之后一致的换行'],
  ['eqeqeq', '要求使用 === 和 !=='],
  ['generator-star-spacing', '强制 generator 函数中 * 号周围使用一致的空格'],
  ['indent', '强制使用一致的缩进'],
  ['key-spacing', '强制在对象字面量的属性中键和值之间使用一致的间距'],
  ['keyword-spacing', '强制在关键字前后使用一致的空格'],
  ['new-cap', '要求构造函数首字母大写'],
  ['new-parens', '强制或禁止调用无参构造函数时有圆括号'],
  ['no-array-constructor', '禁用 Array 构造函数'],
  ['no-caller', '禁用 arguments.caller 或 arguments.callee'],
  ['no-class-assign', '禁止修改类声明的变量'],
  ['no-cond-assign', '禁止条件表达式中出现赋值操作符'],
  ['no-const-assign', '禁止修改 const 声明的变量'],
  ['no-control-regex', '禁止在正则表达式中使用控制字符'],
  ['no-delete-var', '禁止删除变量'],
  ['no-dupe-args', '禁止 function 定义中出现重名参数'],
  ['no-dupe-class-members', '禁止类成员中出现重复的名称'],
  ['no-dupe-keys', '禁止对象字面量中出现重复的 key'],
  ['no-duplicate-case', '禁止出现重复的 case 标签'],
  ['no-empty-character-class', '禁止在正则表达式中使用空字符集'],
  ['no-empty-pattern', '禁止使用空解构模式'],
  ['no-eval', '禁用 eval()'],
  ['no-ex-assign', '禁止对 catch 子句的参数重新赋值'],
  ['no-extend-native', '禁止扩展原生类型'],
  ['no-extra-bind', '禁止不必要的 .bind() 调用'],
  ['no-extra-boolean-cast', '禁止不必要的布尔转换'],
  ['no-extra-parens', '禁止不必要的括号'],
  ['no-fallthrough', '禁止 case 语句落空'],
  ['no-floating-decimal', '禁止数字字面量中使用前导和末尾小数点'],
  ['no-func-assign', '禁止对 function 声明重新赋值'],
  ['no-implied-eval', '禁止使用类似 eval() 的方法'],
  ['no-inner-declarations', '禁止在嵌套的块中出现变量声明或 function 声明'],
  ['no-invalid-regexp', '禁止 RegExp 构造函数中存在无效的正则表达式字符串'],
  ['no-irregular-whitespace', '禁止不规则的空白'],
  ['no-iterator', '禁用 __iterator__ 属性'],
  ['no-lone-blocks', '禁用不必要的嵌套块'],
  ['no-mixed-spaces-and-tabs', '禁止空格和 tab 的混合缩进'],
  ['no-multi-spaces', '禁止使用多个空格'],
  ['no-multi-str', '禁止使用多行字符串'],
  ['no-multiple-empty-lines', '禁止出现多行空行'],
  ['no-native-reassign', '不允许修改只读全局变量'],
  ['no-negated-in-lhs', '不允许否定in表达式中的左操作数'],
  ['no-new-object', '禁用 Object 的构造函数'],
  ['no-new-require', '禁止调用 require 时使用 new 操作符'],
  ['no-new-symbol', '禁止 Symbolnew 操作符和 new 一起使用'],
  ['no-new-wrappers', ' 禁止对 String，Number 和 Boolean 使用 new 操作符'],
  ['no-obj-calls', '禁止把全局对象作为函数调用'],
  ['no-octal', '禁用八进制字面量'],
  ['no-octal-escape', ' 禁止在字符串中使用八进制转义序列'],
  ['no-proto', '禁用 __proto__ 属性'],
  ['no-redeclare', '禁止多次声明同一变量'],
  ['no-regex-spaces', '禁止正则表达式字面量中出现多个空格'],
  ['no-return-assign', ' 禁止在 return 语句中使用赋值语句'],
  ['no-self-assign', '禁止自我赋值'],
  ['no-self-compare', '禁止自身比较'],
  ['no-sequences', '禁用稀疏数组'],
  ['no-throw-literal', '禁止抛出异常字面量'],
  ['no-trailing-spaces', '禁用行尾空格'],
  ['no-undef', '禁用未声明的变量，除非它们在 /*global */ 注释中被提到'],
  ['no-undef-init', '禁止将变量初始化为 undefined'],
  ['no-unexpected-multiline', '禁止出现令人困惑的多行表达式'],
  ['no-unmodified-loop-condition', '禁用一成不变的循环条件'],
  ['no-unneeded-ternary', '禁止可以在有更简单的可替代的表达式时使用三元操作符'],
  [
    'no-unreachable',
    '禁止在 return、throw、continue 和 break 语句之后出现不可达代码',
  ],
  ['no-unsafe-finally', '禁止在 finally 语句块中出现控制流语句'],
  ['no-unused-vars', '禁止出现未使用过的变量'],
  ['no-useless-call', '禁止不必要的 .call() 和 .apply()'],
  ['no-useless-computed-key', '禁止在对象中使用不必要的计算属性'],
  ['no-useless-constructor', '禁用不必要的构造函数'],
  ['no-useless-escape', '禁用不必要的转义字符'],
  ['no-whitespace-before-property', '禁止属性前有空白'],
  ['no-with', '禁用 with 语句'],
  ['one-var', '强制函数中的变量要么一起声明要么分开声明'],
  ['operator-linebreak', '强制操作符使用一致的换行符'],
  ['padded-blocks', '要求或禁止块内填充'],
  ['quotes', '强制使用一致的反勾号、双引号或单引号'],
  ['semi', '要求或禁止使用分号代替 ASI'],
  ['semi-spacing', '强制分号之前和之后使用一致的空格'],
  ['space-before-blocks', '强制在块之前使用一致的空格'],
  ['space-before-function-paren', '强制在 function的左括号之前使用一致的空格'],
  ['space-in-parens', '强制在圆括号内使用一致的空格'],
  ['space-infix-ops', '要求操作符周围有空格'],
  ['space-unary-ops', '强制在一元操作符前后使用一致的空格'],
  ['spaced-comment', '强制在注释中 // 或 /* 使用一致的空格'],
  [
    'template-curly-spacing',
    '要求或禁止模板字符串中的嵌入表达式周围空格的使用',
  ],
  ['use-isnan', '要求使用 isNaN() 检查 NaN'],
  ['valid-typeof', '强制 typeof 表达式与有效的字符串进行比较'],
  ['wrap-iife', '要求 IIFE 使用括号括起来'],
  ['yield-star-spacing', '强制在 yield* 表达式中 * 周围使用空格'],
  ['yoda', '要求或禁止 “Yoda” 条件'],
  ['prefer-const', '要求使用 const 声明那些声明后不再被修改的变量'],
  ['no-debugger', '禁用 debugger'],
  ['object-curly-spacing', '强制在大括号中使用一致的空格'],
  ['array-bracket-spacing', '强制数组方括号中使用一致的空格'],
  // 下面是C++规则中英文翻译
  ['nullpointer-explicitNullDereference', '显式空指针解应用'],
  ['suspicious-tooManyNestedScopes', '函数内嵌套层次太多'],
  ['bufoverrun-funcRetLengthAsIndex', 'read函数返回值作为数组下标'],
  ['memleak-leakReturnValNotUsed', '内存分配函数的返回结果未使用'],
  ['compute-UnsignedDivision', '有符号数和无符号数进行除法运算'],
  ['nullpointer-nullPointerArray', '数组元素空指针'],
  ['bufoverrun-arrayIndexCheckDefect', '数组下标校验缺陷'],
  [
    'nullpointer-funcDereferenceBeforeCheck',
    '函数的引用返回值被先解引用后判空',
  ],
  [
    'nullpointer-possibleDereferenceAfterCheck',
    '可能存在先判空后解引用，但是解引用已不在判空范围内',
  ],
  ['suspicious-autovar', '返回局部变量地址'],
  ['nullpointer-nullPointerClass', '类成员变量没有判断空指针'],
  ['nullpointer-directFuncPossibleRetNull', '函数返回值直接解引用'],
  ['nullpointer-arrayDereferenceBeforeCheck', '数组被先解引用后判空'],
  ['logic-SwitchNoDefault', 'default分支缺失'],
  ['bufoverrun-bufferAccessOutOfBounds', '数据缓冲区越界'],
  ['uninit-possibleUninitvar', '可能的变量未初始化'],
  ['compute-incrementboolean', 'bool变量自增'],
  ['compute-moduloAlwaysTrueFalse', '取模运算结果错误判断'],
  ['logic-incorrectLogicOperator', '错误的逻辑运算操作'],
  ['logic-stlIfFind', '低效使用std::find'],
  ['compute-NegativeBitwiseShift', '位操作数为负'],
  [
    'nullpointer-funcFuncRetNull',
    '函数返回值赋值另一函数的引用返回值， 该引用未判空情况下解引用',
  ],
  ['suspicious-suspiciousfor', '可疑的for循环'],
  ['logic-UnintentionalOverflow', '可能的表达式溢出'],
  ['compute-PreciseComparison', '浮点数判等'],
  ['logic-oppositeInnerCondition', '相反或相同的if条件'],
  ['logic-SwitchNoBreakUP', 'break缺失'],
  ['nullpointer-funcRetNull', '函数返回值未判空解引用'],
  ['compute-ZeroDivision', '除零错误'],
  ['suspicious-unConditionalBreakinLoop', '无条件break'],
  ['compute-Unsignedlessthanzero', '无符号数判断小于0'],
  ['logic-clarifyCondition', '运算符优先级错误'],
  ['logic-StlMissingComparison', '迭代器无结束判断'],
  ['suspicious-IfCondition', 'if条件赋值'],
  ['compute-SizeofForArrayParameter', '数组参数使用sizeof'],
  ['logic-ComparisonOfBoolWithInt', 'bool和int比较'],
  ['logic-duplicateIf', 'if条件重复'],
  ['nullpointer-dereferenceAfterCheck', '先判空后解引用'],
  ['logic-bitwiseOnBoolean', 'bool进行位运算'],
  ['memleak-leakNoVarFunctionCall', '传递参数过程中分配内存'],
  ['bufoverrun-arrayIndexThenCheck', '先访问数组后校验下标范围'],
  ['logic-selfAssignment', '变量自赋值'],
  ['logic-stlSortCheck', '自定义比较函数缺陷'],
  ['nullpointer-arrayDereferenceAfterCheck', '数组取值先判空再解引用'],
  ['uninit-uninitMemberVar', '构造函数中成员变量未初始化'],
  ['nullpointer-dereferenceIfNull', '指针为空解引用'],
  ['bufoverrun-stlOutOfBounds', 'stl库函数越界'],
  ['uninit-uninitstring', '字符串初始化错误'],
  ['bufoverrun-negativeIndex', '负数下标'],
  ['memleak-deallocDealloc', '重复dealloc'],
  ['uninit-uninitvar', '变量未初始化'],
  ['logic-ComparisonOfBoolWithBool', 'bool和bool比较运算'],
  ['memleak-mismatchAllocDealloc', '内存申请和释放不匹配'],
  ['suspicious-Danglingpointer', '野指针'],
  ['bufoverrun-OutOfBoundsStatistic', '基于统计推断数据下标可能越界'],
  ['logic-redundantCondition', '重复的条件表达式'],
  ['uninit-possibleUninitMemberInCtor', '构造函数中成员变量可能未初始化'],
  ['logic-CompareDefectInFor', 'for循环比较运算类型错误'],
  ['uninit-possibleUninitPtr', '可能的指针变量未初始化'],
  ['nullpointer-invalidDereferenceIterator', '无效枚举器解引用'],
  ['compute-SizeofForNumericParameter', '数字常量使用sizeof'],
  ['suspicious-BoolFuncReturn', '未返回bool变量'],
  ['suspicious-suspiciousSemicolon', '可疑的分号使用'],
  ['logic-RecursiveFunc', '函数递归调用'],
  ['uninit-possibleUninitStruct', '可能的未初始化结构体变量'],
  ['logic-SignedUnsignedMixed', '有符号无符号变量之间赋值错误'],
  ['unsafefunc-unsafeFunctionUsage', '高危函数'],
  ['bufoverrun-pointerOutOfBounds', '指针访问越界'],
  ['suspicious-FuncReturn', '函数返回值未处理'],
  ['uninit-uninitPtr', '指针变量未初始化'],
  ['bufoverrun-formatbufoverrun', 'sprintf_s中越界错误'],
  ['suspicious-strPlusChar', '字符串加字符变量'],
  ['logic-integerMultiplyOverflow', '整数乘法运算溢出风险'],
  ['suspicious-invalidIterator', '迭代器使用错误'],
  ['suspicious-RenameLocalVariable', '变量定义重名'],
  ['suspicious-SuspiciousPriority', '可疑优先级'],
  ['nullpointer-funcRetNullStatistic', '基于统计推断函数返回值未判空'],
  ['nullpointer-checkNullDefect', '判空条件缺陷'],
  ['compute-sizeofsizeof', '嵌套sizeof'],
  ['memleak-mismatchSize', '内存分配大小错误'],
  ['uninit-UninitStruct', '未初始化结构体变量'],
  ['logic-ComparisonWithBool', 'bool变量比较运算'],
  ['logic-redundantAssignment', '多余的赋值操作'],
  [
    'nullpointer-arrayFuncRetNull',
    '函数返回值赋值数组， 该数组未判空情况下解引用',
  ],
  ['nullpointer-nullPointerArg', '函数的参数没有判断空指针'],
  ['logic-InvalidVarArgs', '格式化字符串参数不匹配'],
  ['suspicious-NestedLoop', '嵌套循环'],
  ['logic-duplicateBranch', '分支内容重复'],
  ['memleak-deallocuse', 'dealloc后解引用'],
  ['suspicious-assignmentInAssert', '断言中变量赋值'],
  ['bufoverrun-arrayIndexOutOfBounds', '数组下标越界'],
  ['nullpointer-arrayDereferenceIfNull', '数组为空解引用'],
  ['nullpointer-missingDerefOperator', '可能缺少*号操作符'],
  ['logic-STLFindError', 'std::find函数返回值判定错误'],
  ['memleak-memleak', '内存泄漏'],
  ['compute-SizeofForPointerSize', '指针变量使用sizeof'],
  ['logic-DuplicateExpression', '判断条件重复'],
  ['logic-NoFirstCase', 'case缺失'],
  ['suspicious-wrongvarinfor', 'for循环变量错误'],
  ['logic-unsignedMinusError', '无符号整数减法运算溢出风险'],
  ['memleak-resourceLeak', '资源泄漏'],
  ['memleak-memleakOnRealloc', 'realloc内存泄漏'],
  ['nullpointer-dereferenceBeforeCheck', '先解引用后判空'],
  ['uninit-uninitMemberInCtor', '构造函数使用未初始化成员变量'],
  ['memleak-virtualDestructor', '虚析构函数使用错误'],
  ['nullpointer-possibleNullDereferenced', '可能的空指针解引用'],
  ['logic-assignIf', '无效的if表达式'],
  ['nullpointer-funcDereferenceAfterCheck', '函数先判空再解引用'],
  ['suspicious-memsetZeroBytes', 'memset参数使用错误'],
  ['suspicious-suspiciousArrayIndex', '数组下标使用错误'],
  ['nullpointer-funcDereferenceIfNull', '函数引用返回值为空解应用'],
  ['bufoverrun-IndexSelfIncrementError', '数组下标在使用前自增'],
]);

const transformIssueName = (origin: string): string => {
  if (intl.getInitOptions().currentLocale === 'en-US') return origin;
  return transform.has(origin) ? (transform.get(origin) as string) : origin;
};

export const transformIssueNameForObj = (originObj: Object) => {
  if (originObj === undefined || originObj === null) return originObj;
  const result = {};
  Object.keys(originObj).forEach((key) => {
    //@ts-ignore
    result[transformIssueName(key)] = originObj[key];
  });
  return result;
};

export default transformIssueName;
